.content{
  class="#{ 'content--' + entry.category if entry.TYPE == 'child_page' }"
}
  #banner_scroll_target.content__header
    section.content__main.copy{
      class="#{
        if entry.category == 'blog'
          'content__main--stack-2'
        elsif [ 'landing_page' ].include? entry.TYPE
          'content__main--center'
        end
      }"
    }
      - if entry.TYPE == 'panel_content'
        h2.title.title--large= entry.title

      .byline
        = Kramdown::Document.new(entry.introduction).to_html

    / Only if child page
    - if entry.TYPE == 'child_page'

      aside.content__aside{
        class="#{ 'content__aside--stack-1' if entry.category == 'blog' }"
      }

        / Promoted page
        - if entry.promoted_page
          = partial 'partials/side-card',
            locals: \
            { image: entry.promoted_page.banner_image,
              title: entry.promoted_page.title,
              category: entry.promoted_page.category,
              date: (entry.promoted_page.date_time.date if entry.promoted_page.date_time.date_time),
              url: entry.promoted_page.slug }

        / Author
        - if entry.author
          = partial 'partials/profile',
            locals: \
            { photo: entry.author.photo,
              full_name: entry.author.full_name,
              role: entry.author.role,
              organisation: entry.author.organisation,
              biog: entry.author.biog,
              email: entry.author.email,
              twitter: entry.author.twitter,
              linkedin: entry.author.linkedin }

  / If copy
  - if entry.copy
    section.content__main.copy
      = Kramdown::Document.new(entry.copy).to_html

  / Only if child page
  - if entry.TYPE == 'child_page'

    aside.content__aside

      //////////////////////////////
      // Tagging
      //////////////////////////////

      / Organise child pages by category
      - @pages_by_category = data.hs.child_page.group_by{ |key, value| value[:category] }

      / Loop through categorised pages
      - @pages_by_category.each do |categories, pages|

        /  Order by date (descending)
        - @pages_by_date = pages.sort_by{ |key, value| - value.date_time.integer }

        / Filter by tag, remove empty objects and remove this page
        - @pages_tagged = @pages_by_date.map!{ |id, page| \
          [id, page] if page.tags \
                        && page.tags.any?{ |tags| entry.tags.include?(tags) } \
                        && page.ID != entry.ID \
        }.delete_if{ |page| page.nil? }

        / Loop through first five objects in each category
        - @pages_tagged[0..2].map do |id, page|

          / Card
          = partial 'partials/side-card',
            locals: \
            { image: page.banner_image,
              title: page.title,
              category: page.category,
              date: (page.date_time.date if page.date_time),
              url: page.slug }
