- panelData = local_data[:entry_data]
- bgc = panelData[:background_color]
- image = panelData[:image]
- imageSize = panelData[:image_size]
- title = panelData[:title]
- hasTitle = panelData[:show_title] != nil
- copy = panelData[:copy]
- copySize = panelData[:copy_size]
- showMoreCopy = panelData[:show_more]
- callsToAction = panelData[:calls_to_action]
- index = local_data[:index]

.panel{
  id="panel-#{ index }"
  class="#{ panelBgc(bgc) }"
}

  / Panel title
  - if hasTitle
    .panel__content.panel__content--narrow.e-hide-above-sm
      h3.title-xl.e-col-green.e-align-cen.e-mgn-b-xl= title

  .panel__content.panel__content--full
    .grid.grid--lg.grid--center

      / Image
      .grid__cell{
        class="grid__cell--above-sm-#{
          imageSize == "large" ? "V" : (imageSize == "medium" ? "IV" : "III")
        }"
      }
        = partial "views/partials/image",
          locals: { local_data: \
            { image_data: image,
              feature: true }}

      / Copy
      .grid__cell.grid__cell--above-sm-VII

        / Panel title
        - if hasTitle
          h3.title-xl.e-col-green.e-mgn-b-md.e-hide-below-sm= title

        .copy{
          class="#{ "e-fz-lg" if copySize == "extra-large" }"
          class="#{ "e-fz-md" if copySize == "large" }"
        }
          = markdown(copy) if copy

        - if showMoreCopy
          = partial "views/partials/expand",
            locals: { local_data: \
            { id: showMoreCopy.cta_id,
              content: showMoreCopy.content }}

        / Calls to action
        - if showMoreCopy || callsToAction
          .grid.grid--xs

            / Show more
            - if showMoreCopy
              .grid__cell
                = partial "views/partials/btn",
                  locals: { local_data: \
                    { type: "state",
                      size: "sm", style: "secondary",
                      label_on: "Show more", label_off: "Show less",
                      label_size: "sm",
                      aria_id: "activate-#{ showMoreCopy.cta_id }",
                      aria_target_id: showMoreCopy.cta_id }}

            - if callsToAction
              - callsToAction.each do |cta|
                .grid__cell

                  / Download
                  - if cta.TYPE == "cta_download"
                    = partial "views/partials/btn",
                      locals: { local_data: \
                        { type: "link",
                          size: "sm", style: "primary",
                          label: cta[:button_text],
                          label_size: "sm",
                          url: cta[:file].url }}

                  / Modal
                  - if cta.TYPE == "cta_modal"

                    / Modal button
                    = partial "views/partials/btn",
                      locals: { local_data: \
                        { type: "state",
                          size: "sm", style: "secondary",
                          label_on: cta[:button_text], label_off: "Close",
                          label_size: "sm",
                          page: "no-scroll", switch: true,
                          aria_id: "activate-#{ cta[:modal][:cta_id] }",
                          aria_target_id: cta[:modal][:cta_id],
                          iframe: ((cta[:modal][:content].include? "<iframe") ? true : false) }}

                    / Modal window
                    = partial "views/partials/modal",
                      locals: { local_data: \
                      { id: cta[:modal][:cta_id],
                        content: cta[:modal][:content],
                        size: cta[:modal][:width] }}
