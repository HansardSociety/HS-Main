<%
require "json"
panelData = local_data[:entry_data]
index = local_data[:index]
flow = local_data[:flow]

bgc = panelData[:background_color]
bgcClass = colorProfile(:mono).include?(bgc) ? panelBgc(bgc) : panelBgc(bgc, { gradient: true })

title = panelData[:title]
titleColor = colorProfile(:dark).include?(bgc) ? "e-col-white-1" : "e-col-brand-green-2"
caption = panelData[:caption]

rowOneGridCellWidth = 12 / panelData[:charts_row_1].length
if panelData[:charts_row_2]
  rowTwoGridCellWidth = 12 / panelData[:charts_row_2].length
end
%>

<section
  id="panel-<%= index %>"
  class="panel <%= "panel--flow" if flow %> panel--no-overflow-x <%= bgcClass %>">
  <span
    id="<%= panelData[:title].parameterize %>"
    class="e-hidden"
    aria-hidden="true"></span>

  <div class="panel__inner">
    <% if panelData[:show_title] %>
      <header class="panel__content panel__content--full">
        <div class="grid grid--md grid--center">
          <div class="grid__cell grid__cell--md-12 grid__cell--md-above-md-7">
            <h2 class="title-lg <%= titleColor %> e-mgn-b-md"><%= panelData[:title] %></h2>
          </div>
        </div>
      </header>
    <% end %>

    <div class="panel__content panel__content--<%= panelData[:rows_width] %>">
      <div class="grid grid--md">

        <!--**********************************************
            =Row 1
        ***********************************************-->


        <% if panelData[:charts_row_1] %>
          <% panelData[:charts_row_1].each_with_index do |panelEntry, index| %>

            <%# Chart %>
            <% if panelEntry[:TYPE] == "chart" %>
              <div class="grid__cell grid__cell--md-12 grid__cell--md-above-sm-<%= rowOneGridCellWidth %>">
                <section class="chart chart--full-height">
                  <% if panelEntry[:show_header] %>
                    <header
                      class="chart__header"
                      style="<%= "min-width: #{ panelEntry[:chart_width] }px;" if panelEntry[:chart_width] %>">
                      <div class="chart__header-inner">
                        <% if panelData[:show_title] %>
                          <h3 class="title-xs e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h3>
                        <% else %>
                          <h2 class="title-xs e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h2>
                        <% end %>
                        <p class="e-fz-xs e-col-black-1"><%= panelEntry[:caption] %></p>
                      </div>
                    </header>
                  <% end %>
                  <div
                    class="chart__container"
                    style="
                      <%= "min-width: #{ panelEntry[:chart_width] }px;" if panelEntry[:chart_width] %>
                      <%= "min-height: #{ panelEntry[:chart_height] }px;" if panelEntry[:chart_height] %>">
                    <canvas class="chart__canvas"></canvas>
                  </div>
                  <div class="chart__citation"><%= panelEntry[:citation] %></div>
                  <script class="chart__config" type="application/json">
                    {
                      "type": "<%= panelEntry[:chart_type] %>",
                      "data": {
                        "datasets": <%= panelEntry[:chart_datasets] %>,
                        "labels": <%= panelEntry[:chart_labels] %>
                      },
                      "options": <%= panelEntry[:chart_options] %>,
                      "customConfig": <%= panelEntry[:chart_custom_config] %>
                    }
                  </script>
                </section>
              </div>

            <%# Text box %>
            <% elsif panelEntry[:TYPE] == "text_box" %>
              <div class="grid__cell grid__cell--md-12 grid__cell--md-above-sm-<%= rowOneGridCellWidth %>">
                <div class="text-box">
                  <% if panelEntry[:show_title] %>
                    <% if panelData[:show_title] %>
                      <h3 class="title-md e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h3>
                    <% else %>
                      <h2 class="title-lg e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h2>
                    <% end %>
                  <% end %>
                  <div class="copy">
                    <%= markdown(panelEntry[:copy]) %>
                  </div>
                </div>
              </div>
            <% end %>
          <% end %>
        <% end %>

        <!--**********************************************
            =Row 2
        ***********************************************-->

        <% if panelData[:charts_row_2] %>
          <% panelData[:charts_row_2].each_with_index do |panelEntry, index| %>

            <%# Chart %>
            <% if panelEntry[:TYPE] == "chart" %>
              <div class="grid__cell grid__cell--md-12 grid__cell--md-above-sm-<%= rowTwoGridCellWidth %>">
                <section class="chart chart--full-height">
                  <% if panelEntry[:show_header] %>
                    <header
                      class="chart__header"
                      style="<%= "min-width: #{ panelEntry[:chart_width] }px;" if panelEntry[:chart_width] %>">
                      <div class="chart__header-inner">
                        <% if panelData[:show_title] %>
                          <h3 class="title-sm e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h3>
                        <% else %>
                          <h2 class="title-sm e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h2>
                        <% end %>
                        <p class="e-fz-xs e-col-black-1"><%= panelEntry[:caption] %></p>
                      </div>
                    </header>
                  <% end %>
                  <div
                    class="chart__container"
                    style="
                      <%= "min-width: #{ panelEntry[:chart_width] }px;" if panelEntry[:chart_width] %>
                      <%= "min-height: #{ panelEntry[:chart_height] }px;" if panelEntry[:chart_height] %>">
                    <canvas class="chart__canvas print__hide"></canvas>
                  </div>
                  <div class="chart__citation"><%= panelEntry[:citation] %></div>
                  <script class="chart__config" type="application/json">
                    {
                      "type": "<%= panelEntry[:chart_type] %>",
                      "data": {
                        "datasets": <%= panelEntry[:chart_datasets] %>,
                        "labels": <%= panelEntry[:chart_labels] %>
                      },
                      "options": <%= panelEntry[:chart_options] %>,
                      "customConfig": <%= panelEntry[:chart_custom_config] %>
                    }
                  </script>
                </section>
              </div>

            <%# Text box %>
            <% elsif panelEntry[:TYPE] == "text_box" %>
              <div class="grid__cell grid__cell--md-12 grid__cell--md-above-sm-<%= rowTwoGridCellWidth %>">
                <div class="text-box">
                  <% if panelEntry[:show_title] %>
                    <% if panelData[:show_title] %>
                      <h3 class="title-md e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h3>
                    <% else %>
                      <h2 class="title-lg e-col-brand-green-2 e-mgn-b-xxs"><%= panelEntry[:title] %></h2>
                    <% end %>
                  <% end %>
                  <div class="copy">
                    <%= markdown(panelEntry[:copy]) %>
                  </div>
                </div>
              </div>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
</section>

<%# <section class="chart chart--full-height">
<div
  class="chart__container"
  style="width: 100%; min-height: 300px;">
  <canvas class="chart__canvas print__hide"></canvas>
</div>
<script class="chart__config" type="application/json">
{
  "type": "horizontalBar",
  "data": {
    "datasets": [
      {
        "data": [
          45
        ],
        "label": "EU (Withdrawal) Act 2018",
        "datasetID": "total-sis-euwa"
      },
      {
        "data": [
          8
        ],
        "label": "Other Acts of Parliament",
        "datasetID": "total-sis-other"
      }
    ],
    "labels": []
  },
  "options": {
    "scales": {
      "xAxes": [
        {
          "id": "x-number-of-sis",
          "ticks": {
            "max": 1000,
            "min": 0,
            "stepSize": 50
          },
          "stacked": true,
          "scaleLabel": {
            "labelString": "Number of SIs"
          }
        }
      ],
      "yAxes": [
        {
          "id": "y-axis",
          "stacked": true,
          "barPercentage": 0.75
        }
      ]
    }
  },
  "customConfig": {
    "colors": [
      {
        "palette": [
          "#04655a"
        ],
        "datasetIDs": [
          "total-sis-euwa"
        ]
      },
      {
        "palette": [
          "#80557d"
        ],
        "datasetIDs": [
          "total-sis-other"
        ]
      }
    ],
    "annotations": [
      {
        "type": "axisBox",
        "xAxisID": "x-number-of-sis",
        "yAxisID": "y-axis",
        "xPosition": [
          800,
          1000
        ]
      },
      {
        "type": "axisLineVertical",
        "axisID": "x-number-of-sis",
        "position": 400,
        "label": {
          "content": "No deal",
          "position": "left",
          "xAdjust": -30
        }
      },
      {
        "type": "axisLineVertical",
        "axisID": "x-number-of-sis",
        "position": 800,
        "label": {
          "content": "Min SIs",
          "position": "left",
          "xAdjust": -30
        }
      },
      {
        "type": "axisLineVertical",
        "axisID": "x-number-of-sis",
        "position": 1000,
        "label": {
          "content": "Max SIs",
          "position": "left",
          "xAdjust": -30
        }
      }
    ]
  }
}


</script>
</section> %>
