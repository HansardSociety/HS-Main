.grid {
  @extend %e-flex-row;
}

.grid--center {
  justify-content: center;
}

@each $breakpoint in map-keys($breakpoints) {
  @include above($breakpoint) {

    .grid--above-#{ $breakpoint }-center {
      justify-content: center;
    }
  }
}

// Allow item marked 'order-0' (below) to jump to start
.grid__cell {
  order: 1;

  @extend %e-position-relative;
}

// Sizes
@each $sizeKey, $sizeVal in $spacing {

  // Core
  .grid--#{ $sizeKey } {
    @extend %e-mgn-neg-l-#{ $sizeKey };
    @extend %e-mgn-neg-t-#{ $sizeKey };

    & > .grid__cell {
      // width: 100%;
      @extend %e-mgn-t-#{ $sizeKey };
      @extend %e-mgn-l-#{ $sizeKey };
    }

    & > .grid__cell--fill {
      width: 100%;
      flex-grow: 1;
      // flex-shrink: 0;
      // flex-basis: calc(100% - #{ $sizeVal });
    }
  }

  // Columns:
  // Cell 1 through 12 (100 / 12 == 8.3333)
  @each $col in $columns {

    // Cell
    .grid__cell--#{ $col } {
      // flex-grow: 1 !important;
      flex-basis: calc((#{ 8.3333 * $col + '%'}) - #{ $sizeVal }) !important; // need to override flex from descendant selector
    }

    // Offset
    .grid__cell--offset-#{ $col } {
      margin-left: calc(#{ 8.3333 * $col + '%'} + #{ $sizeVal / 2 }) !important; // See above
    }

    // Breakpoints
    @each $breakpoint in map-keys($breakpoints) {
      @include above($breakpoint) {

        // Cell
        .grid__cell--above-#{ $breakpoint }-#{ $col } {
          // flex-grow: 1 !important;
          flex-basis: calc((#{ 8.3333 * $col + '%'}) - #{ $sizeVal }) !important; // see above
        }

        // Offset
        .grid__cell--above-#{ $breakpoint }-offset-#{ $col } {
          margin-left: calc(#{ 8.3333 * $col + '%'} + #{ $sizeVal / 2 }) !important; // see above
        }
      }
    }
  }
}

// Order
@each $col in $columns {

  .grid__cell--order-#{ $col } {
    order: #{ $col };
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include above($breakpoint) {

      .grid__cell--above-#{ $breakpoint }-order-#{ $col } {
        order: #{ $col };
      }
    }
  }
}

// Expand

.grid__expand-btn {
  display: none;
}

@include below(md) {

  .grid__cell--expand {
    position: relative;

    overflow: hidden;

    &.JS-active {
      & > .grid__expand-btn {
        display: none;
      }
    }

    &.JS-inactive {
      height: 20rem;

      &::after {
        position: absolute;
        bottom: 0;
        left: 0;

        display: block;

        width: 100%;
        height: 7.5rem;

        content: "";

        background-image: linear-gradient(to top, rgba(255, 255, 255, 1) 1rem, rgba(255, 255, 255, 0) 100%);
      }
    }
  }

  .grid__expand-btn {
    position: absolute;
    z-index: 1;
    bottom: 0;

    display: block;

    width: 100%;
  }
}
