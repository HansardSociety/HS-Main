/*		=Core
  ========================================================================== */

.grid {
  @extend %e-flex-row;
}

.grid--center {
  justify-content: center;
}

.grid--middle {
  align-items: center;
}

@each $breakpoint in map-keys($breakpoints) {
  @include above($breakpoint) {

    .grid--above-#{ $breakpoint }-center {
      justify-content: center;
    }
  }
}

.grid__cell {
  order: 1;

  @extend %e-position-relative;
}

.grid__cell--end {
  align-self: flex-end;
}

/*		=Columns
  ========================================================================== */

$colBase: 100 / 12;

@each $sizeKey, $sizeVal in $spacing {
  $sizeName: $sizeKey;
  $sizeUnit: $sizeVal;

  .grid--#{ $sizeName } {
    @extend %e-mgn-neg-l-#{ $sizeName };
    @extend %e-mgn-neg-t-#{ $sizeName };

    & > .grid__cell {
      @extend %e-mgn-t-#{ $sizeName };
      @extend %e-mgn-l-#{ $sizeName };
    }

    & > .grid__cell--fill {
      flex-grow: 1;
    }
  }

  @for $col from 1 through 12 {
    $width: "#{ $colBase * $col }%";
    $offset: "#{ $colBase * $col }%";

    .grid__cell--#{ $sizeName }-#{ $col } {
      flex-basis: calc(#{ $width } - #{ $sizeUnit }) !important; // need to override flex from descendant selector
    }

    .grid__cell--#{ $sizeName }-offset-#{ $col } {
      margin-left: calc(#{ $offset }) !important; // See above
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include above($breakpoint) {

        .grid__cell--#{ $sizeName }-above-#{ $breakpoint }-#{ $col } {
          flex-basis: calc(#{ $width } - #{ $sizeUnit }) !important; // see above
        }

        .grid__cell--#{ $sizeName }-above-#{ $breakpoint }-offset-#{ $col } {
          margin-left: calc(#{ $offset }) !important; // see above
        }
      }
    }
  }
}

/*		=Order
  ========================================================================== */

@for $col from 1 through 12 {

  .grid__cell--order-#{ $col } {
    order: #{ $col };
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include above($breakpoint) {

      .grid__cell--above-#{ $breakpoint }-order-#{ $col } {
        order: #{ $col };
      }
    }
  }
}

/*		=Expand
  ========================================================================== */

.grid__expand-btn {
  display: none;
}

@include below(md) {

  .grid__cell--expand {
    position: relative;

    &.JS-active {
      & > .grid__expand-btn {
        display: none;
      }
    }

    &.JS-inactive {
      overflow: hidden;

      height: 20rem;

      &::after {
        position: absolute;
        bottom: 0;
        left: 0;

        display: block;

        width: 100%;
        height: 7.5rem;

        content: "";

        background-image: linear-gradient(to top, rgba(255, 255, 255, 1) 1rem, rgba(255, 255, 255, 0) 100%);
      }
    }
  }

  .grid__expand-btn {
    position: absolute;
    z-index: 1;
    bottom: 0;

    display: block;

    width: 100%;
  }
}
