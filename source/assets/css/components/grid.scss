.grid {
  @extend %e-flex-row;
}

.grid--center {
  justify-content: center;
}

@each $breakpoint in map-keys($breakpoints) {
  @include above($breakpoint) {

    .grid--above-#{ $breakpoint }-center {
      justify-content: center;
    }
  }
}

// Allow item marked 'order-0' (below) to jump to start
.grid__cell {
  order: 1;

  @extend %e-position-relative;
}

// Sizes
@each $sizeKey, $sizeVal in $spacing {

  // Core
  .grid--#{ $sizeKey } {
    @extend %e-mgn-neg-l-#{ $sizeKey };
    @extend %e-mgn-neg-t-#{ $sizeKey };

    & > .grid__cell {
      @extend %e-mgn-t-#{ $sizeKey };
      @extend %e-mgn-l-#{ $sizeKey };
    }

    & > .grid__cell--fill {
      flex: 0 0 calc(100% - #{ $sizeVal });
    }
  }

  // Columns:
  // Cell 1 through 12 (100 / 12 == 8.3333)
  @each $numKey, $numVal in $numerals {

    // Cell
    .grid__cell--#{ $numVal } {
      flex: 1 calc((#{ 8.3333 * $numKey + '%'}) - #{ $sizeVal }) !important; // need to override flex from descendant selector
    }

    // Offset
    .grid__cell--offset-#{ $numVal } {
      margin-left: calc(#{ 8.3333 * $numKey + '%'} + #{ $sizeVal / 2 }) !important; // See above
    }

    // Breakpoints
    @each $breakpoint in map-keys($breakpoints) {
      @include above($breakpoint) {

        // Cell
        .grid__cell--above-#{ $breakpoint }-#{ $numVal } {
          flex: 1 calc((#{ 8.3333 * $numKey + '%'}) - #{ $sizeVal }) !important; // see above
        }

        // Offset
        .grid__cell--above-#{ $breakpoint }-offset-#{ $numVal } {
          margin-left: calc(#{ 8.3333 * $numKey + '%'} + #{ $sizeVal / 2 }) !important; // see above
        }
      }
    }
  }
}

// Order
@each $numKey, $numVal in $numerals {

  .grid__cell--order-#{ $numVal } {
    order: #{ $numKey };
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include above($breakpoint) {

      .grid__cell--above-#{ $breakpoint }-order-#{ $numVal } {
        order: #{ $numKey };
      }
    }
  }
}

// Expand

.grid__expand-btn {
  display: none;
}

@include below(md) {

  .grid__cell--expand {
    position: relative;

    overflow: hidden;

    &.JS-active {
      & > .grid__expand-btn {
        display: none;
      }
    }

    &.JS-inactive {
      height: 20rem;

      &::after {
        position: absolute;
        top: 0;
        left: 0;

        display: block;

        width: 100%;
        height: 20rem;

        content: "";

        background-image: linear-gradient(to top, rgba(255, 255, 255, 1) 7.5%, rgba(255, 255, 255, 0) 50%);
      }
    }
  }

  .grid__expand-btn {
    position: absolute;
    z-index: 1;
    bottom: 0;

    display: block;

    width: 100%;
  }
}
