// Classes added dynamically by Algolia

.search {}

/*		=Box
  ========================================================================== */

.search__box {

  /**
   * Need to nest selectors to override Algolia cascade
  */

  .search__box-inner {
    @extend %e-container;
    @extend %e-container--narrow;
    @extend %e-max-width-full;
    @extend %e-mgn-auto-x;
    @extend %e-mgn-b-xs;
    @extend %e-position-relative;
    @extend %e-width-full;
  }

  .search__box-input {
    @extend .form__field;
    @extend %e-pad-y-lg;
  }


  .search__box-magnifier,
  .search__box-reset {
    top: 0.675rem;

    @extend %e-position-absolute;

    & > svg {
      width: 1rem;
      height: 1rem;

      fill: Get($colorGroups, grey, 1);
    }
  }

  .search__box-reset {
    right: 2rem;

    @extend %e-cursor-pointer;
  }

  .search__box-magnifier {
    left: 2rem;
  }
}

/*		=Filters
  ========================================================================== */

.search__filters {
  @extend %e-mgn-t-xs;

  .ais-refinement-list {
    @extend %e-align-cen;
  }

  .ais-refinement-list--header,
  .ais-refinement-list--body {
    @extend %e-display-inline-block;
    @extend %e-mgn-t-xs;
  }

  .ais-refinement-list--header {
    @extend %e-col-grey-3;
    @extend %e-mgn-r-xs;
  }

  .ais-refinement-list--list {
    @extend .grid;
    @extend .grid--xs;
  }

  .ais-refinement-list--item {
    @extend .grid__cell;
    @extend %e-display-inline-block;
  }
}

/*		=Results
  ========================================================================== */

.search__results {

  .search__results-inner {
    @extend .grid;
    @extend .grid--sm;
    @extend .grid--center;
  }

  .search__results-item {
    @extend .grid__cell;
    @extend .grid__cell--sm-above-md-4;
  }

  .search__results-more {
    @extend %e-align-cen;
  }

  .search__results-more-btn:not(:disabled) {
    display: inherit;

    @extend .btn;
    @extend .btn--secondary;
    @extend .btn--md;
    @extend .btn__label;
    @extend .btn__label--md;
    @extend %e-align-cen;
    @extend %e-mgn-t-md;
  }

  .search__results-more-btn:disabled {
    width: 0;
    height: 0;

    color: transparent;

    @extend %e-position-relative;
    @extend %e-mgn-x-sm;

    &::before {
      top: 0;
      left: -2.5rem;

      width: 5rem;

      content: "— END —";

      @extend %e-col-grey-3;
      @extend %e-display-block;
      @extend %e-ff-prim-heavy;
      @extend %e-position-relative;
    }
  }
}

/*		=Sort
  ========================================================================== */

.search__sort {
  left: 50%;

  transform: translateX(-50%);

  @extend %e-align-cen;
  @extend %e-display-inline-block;
  @extend %e-mgn-x-sm;
  @extend %e-position-relative;
}

.search__sort-inner {
  @extend %e-mgn-t-xs;
  @extend %e-position-relative;

  & > div {
    @extend %e-display-inline-block;
  }

  .search__sort-select {
    width: 7rem;
    padding: .5rem 1rem .5rem .5rem;

    border: 2px solid Get($colorGroups, white, 3) !important;
    outline: none;

    @extend .label-xs;
    @extend %e-rad-slight;
  }

  .search__sort-item {
    text-transform: none;

    @extend %e-ff-prim-roman;
    @extend %e-fz-sm;
  }
}

.search__sort-arrow {
  top: 1px;
  right: .5rem;

  @extend %e-position-absolute;
  @extend %e-zidx-neg;

  svg {
    width: 1rem;
  }
}

/*		=Clear
  ========================================================================== */

.search__clear-inner {
  left: 50%;

  transform: translateX(-50%);

  @extend %e-align-cen;
  @extend %e-display-inline-block;
  @extend %e-mgn-b-sm;
  @extend %e-position-relative;
}

.search__clear-link {
  @extend .link;
  @extend .label-xs;
  @extend %e-display-inline;
}

