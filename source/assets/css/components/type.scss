///////////////////////////////////////////////////////////
//  =Type - Components
////////////////////////////////////////////////////////////

//  =Font face
//////////////////////////////

@each $typeKey, $typeVal in map-get($type, primary) {

  @font-face {
    font-family: map-get($typeVal, name);
    font-weight: map-get($typeVal, weight);
    font-style: map-get($typeVal, style);
    src: url('./' + map-get($typeVal, file)) format("opentype");
  }
}

//  =Titles
//////////////////////////////

@each $sizeKey, $sizeVal in map-get($type, sizes) {

  .title-#{ $sizeKey },
  .strap-#{ $sizeKey },
  .label-#{ $sizeKey } {
    @extend %E-fz-#{ $sizeKey };
  }

  .title-#{ $sizeKey } {
    @extend %E-ff-prim-heavy;
  }

  .strap-#{ $sizeKey },
  .label-#{ $sizeKey },
  .cross-head-#{ $sizeKey } {
    @extend %E-ff-prim-medium;
  }

  .strap-#{ $sizeKey },
  .label-#{ $sizeKey } {
    @extend %E-col-current;
  }

  .label-#{ $sizeKey } {
    @extend %E-upper;
  }

  .cross-head-#{ $sizeKey } {
    @extend %E-col-mid-grey;
    @extend .label-#{ $sizeKey };
  }
}



.link {
  border-bottom: 2px solid rgba(Get($colors, primary, green), .15);

  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;

  @extend %E-col-green;
  @extend %E-trans-core;

  &:hover {
    border-bottom: 2px solid Get($colors, primary, green);
  }
}

strong {
  @extend %E-ff-prim-medium;
}
