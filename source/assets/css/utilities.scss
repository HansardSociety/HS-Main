// CONTENTS
// 0. Maps
// 1. Positioning
// 2. Box-model
// 3. Decoration
// 4. Animation

////////////////////////////////////////////////////////////
//  =Maps
////////////////////////////////////////////////////////////

$properties: (
  display: (
    none, block, flex
  ),
  position: (
    relative, absolute, fixed
  ),
  origins: (
    left, top, right, bottom
  ),
  axies: (
    0, 50, 100
  ),
  opacity: (
    0, 1
  )
);

////////////////////////////////////////////////////////////
//  =Positioning
////////////////////////////////////////////////////////////

@each $position in map-get($properties, position) {

  %u-position-#{ $position } {
    position: #{ $position }
  }

  // Create positioning placeholders for x/y axies

  @each $origin in map-get($properties, origins) {

    @each $axis in map-get($properties, axies) {

      %u-position-#{ $position }-#{ $origin }-#{ $axis } {

        @extend %u-position-#{ $position };
        #{ $origin }: #{ $axis + '%' };
      }
    }

    @each $screen in map-keys($breakpoints) {

      @include above('#{ $screen }') {

        %u-position-#{ $position }__#{ $screen } {
          position: #{ $position }
        }

        @each $axis in map-get($properties, axies) {

          %u-position-#{ $position }-#{ $origin }-#{ $axis }__#{ $screen } {

            @extend %u-position-#{ $position }__#{ $screen };
            #{ $origin }: #{ $axis + '%' };
          }
        }
      }
    }
  }
}

%u-position-absolute-0,
%u-position-fixed-0 {
  top: 0;
  left: 0;
}

// Absolute
%u-position-absolute-0 {
  @extend %u-position-absolute;
}

// Fixed
%u-position-fixed-0 {
  @extend %u-position-fixed;
}

////////////////////////////////////////////////////////////
//  Absolute Centre
////////////////////////////////////////////////////////////

%u-absolute-center-x,
%u-absolute-center-xy {
  @extend %u-position-absolute-left-50;
}

%u-absolute-center-y,
%u-absolute-center-xy {
  @extend %u-position-absolute-top-50;
}

%u-absolute-center-x {
  transform: translateX(-50%);
}

%u-absolute-center-y {
  transform: translateY(-50%);
}

%u-absolute-center-xy {
  transform: translate(-50%, -50%);
}

@each $screen in map-keys($breakpoints) {

  @include above('#{ $screen }') {

    %u-absolute-center-x__#{ $screen },
    %u-absolute-center-xy__#{ $screen } {
      @extend %u-position-absolute-left-50__#{ $screen };
    }

    %u-absolute-center-y__#{ $screen },
    %u-absolute-center-xy__#{ $screen } {
      @extend %u-position-absolute-top-50__#{ $screen };
    }

    %u-absolute-center-x__#{ $screen } {
      transform: translateX(-50%);
    }

    %u-absolute-center-y__#{ $screen } {
      transform: translateY(-50%);
    }

    %u-absolute-center-xy__#{ $screen } {
      transform: translate(-50%, -50%);
    }
  }
}


////////////////////////////////////////////////////////////
//  Misc
////////////////////////////////////////////////////////////

%u-hidden {
  clip: rect(1px, 1px, 1px, 1px);

  width: 1px;
  height: 1px;

  word-wrap: normal;

  @extend %u-position-absolute;
  @extend %u-overflow-hidden;
}

%u-pseudo-element-base {
  content: '';

  @extend %u-display-block;
  @extend %u-position-absolute;
}

////////////////////////////////////////////////////////////
//  =Box-model
////////////////////////////////////////////////////////////

// Display loop
@each $property in map-get($properties, display) {

  %u-display-#{ $property } {
    display: #{ $property }
  }

  @each $screen in map-keys($breakpoints) {
    @include above('#{ $screen }') {
      %u-display-#{ $property }__#{ $screen } {
        display: #{ $property }
      }
    }
  }
}

%u-width-full {
  width: 100%;
}

%u-height-full {
  height: 100%;
}

%u-padding-slim {
  padding: .5rem 1rem;
}

%u-padding-medium {
  padding: 1rem;
}

%u-padding-large {
  padding: 2rem 1rem;
}

%u-margin-top-small {
  margin-top: 1rem;
}

%u-margin-top-medium {
  margin-top: 2rem;
}

%u-row-center {
  flex-flow: row wrap;
  align-items: center;
  @extend %u-display-flex;
}

%u-overflow-auto {
  overflow: auto;
}

%u-overflow-hidden {
  overflow: hidden;
}

////////////////////////////////////////////////////////////
//  =Decoration
////////////////////////////////////////////////////////////

%u-bgc-brand-green {
  background-color: $brand_green;
}

%u-bgc-brand-black {
  background-color: $brand_black;
}

%u-box-shadow-brand-green {
  box-shadow: 0 0 10px 3px darken($brand_green, 15%);
}

// Accents

%u-accent-brand-green-top {
  border-top: 2px solid $brand_green;
}

%u-accent-brand-light-green-top {
  border-top: 2px solid $brand_light_green;
}

%u-accent-brand-light-blue-top {
  border-top: 2px solid $brand_light_blue;
}

%u-cursor-pointer {
  cursor: pointer;
}

////////////////////////////////////////////////////////////
//  Opacity
////////////////////////////////////////////////////////////

%u-opacity-0 {
  opacity: 0;
}

%u-opacity-1 {
  opacity: 1;
}

@each $screen in map-keys($breakpoints) {

  @include above('#{ $screen }') {

    @each $opacity in map-get($properties, opacity) {

      %u-opacity-#{ $opacity }__#{ $screen } {
        opacity: #{ $opacity }
      }
    }
  }
}

////////////////////////////////////////////////////////////
//  =Animation
////////////////////////////////////////////////////////////

%u-transition-all {
  transition: all .2s ease;
}

@each $screen in map-keys($breakpoints) {

  @include above('#{ $screen }') {

    %u-transition-all__#{ $screen } {
      transition: all ease .25s;
    }
  }
}
