////////////////////////////////////////////////////////////
//  =Maps
////////////////////////////////////////////////////////////

$properties: (
  display:  ( none, block, inline-block, flex, inline-flex ),
  position: ( relative, absolute, fixed ),
  origins:  ( left, top, right, bottom ),
  axies:    ( 0, 50, 100 ),
  opacity:  ( 0, 1 )
);

// *********************************************************
// *********************************************************
//
//  Silent utilities
//
// *********************************************************
// *********************************************************

////////////////////////////////////////////////////////////
//  =Positioning
////////////////////////////////////////////////////////////

// All position placeholders
@each $position in map-get($properties, position) {

  // Base positioning
  %u-position-#{ $position } { position: #{ $position } }
  @each $screen in map-keys($breakpoints) {
    @include above('#{ $screen }') {
      %u-position-#{ $position }__#{ $screen } {
        position: #{ $position }
      }
    }
  }

  // x/y axies positioning
  @each $origin in map-get($properties, origins) {
    @each $axis in map-get($properties, axies) {
      %u-position-#{ $position }-#{ $origin }-#{ $axis } {
        #{ $origin }: #{ $axis + '%' };
        @extend %u-position-#{ $position };
      }
    }
    @each $screen in map-keys($breakpoints) {
      @include above('#{ $screen }') {
        @each $axis in map-get($properties, axies) {
          %u-position-#{ $position }-#{ $origin }-#{ $axis }__#{ $screen } {
            #{ $origin }: #{ $axis + '%' };
            @extend %u-position-#{ $position }__#{ $screen };
          }
        }
      }
    }
  }
}

// Position absolute top-left placeholders only
@each $axis in map-get($properties, axies) {
  %u-position-absolute-#{ $axis } {
    top: #{ $axis + '%' }; left: #{ $axis + '%' };
    @extend %u-position-absolute;
  }
  @each $screen in map-keys($breakpoints) {
    @include above('#{ $screen }') {
      %u-position-absolute-#{ $axis }__#{ $screen } {
        top: #{ $axis + '%' }; left: #{ $axis + '%' };
        @extend %u-position-absolute__#{ $screen };
      }
    }
  }
}

// Position absolute center
%u-absolute-center-x,
%u-absolute-center-xy { @extend %u-position-absolute-left-50; }
%u-absolute-center-y,
%u-absolute-center-xy { @extend %u-position-absolute-top-50; }
%u-absolute-center-x  { transform: translateX(-50%); }
%u-absolute-center-y  { transform: translateY(-50%); }
%u-absolute-center-xy { transform: translate(-50%, -50%); }

// Position absolute center breakpoints
@each $screen in map-keys($breakpoints) {
  @include above('#{ $screen }') {
    %u-absolute-center-x__#{  $screen },
    %u-absolute-center-xy__#{ $screen } { @extend %u-position-absolute-left-50__#{ $screen }; }
    %u-absolute-center-y__#{  $screen },
    %u-absolute-center-xy__#{ $screen } { @extend %u-position-absolute-top-50__#{ $screen }; }
    %u-absolute-center-x__#{  $screen } { transform: translateX(-50%); }
    %u-absolute-center-y__#{  $screen } { transform: translateY(-50%); }
    %u-absolute-center-xy__#{ $screen } { transform: translate(-50%, -50%); }
  }
}

////////////////////////////////////////////////////////////
//  Overflow
////////////////////////////////////////////////////////////

%u-overflow-auto     { overflow: auto; }
%u-overflow-hidden   { overflow: hidden; }
%u-overflow-y-auto   { overflow-y: auto; }
%u-overflow-y-scroll { overflow-y: scroll; }
%u-overflow-x-hidden { overflow-x: hidden; }

////////////////////////////////////////////////////////////
//  Misc
////////////////////////////////////////////////////////////

// Z index
%u-zindex-negative { z-index: -1; }
@each $screen in map-keys($breakpoints) {
  @include above('#{ $screen }') {
    %u-zindex-negative__#{ $screen } { z-index: -1; }
  }
}

%u-hidden {
  clip: rect(1px, 1px, 1px, 1px);

  width: 1px;
  height: 1px;

  word-wrap: normal;

  @extend %u-position-absolute;
  @extend %u-overflow-hidden;
}

%u-pseudo-element-base {
  content: '';

  @extend
    %u-display-block,
    %u-position-absolute-0;
}

// Cursors
%u-cursor-pointer { cursor: pointer; }

// Inline spacing
%u-inline-spacing-container-xsmall {
  margin-top: -.4rem;
  margin-left: -.4rem;
}

%u-inline-spacing-xsmall {
  margin-top: .4rem;
  margin-left: .4rem;
}

////////////////////////////////////////////////////////////
//  =Display
////////////////////////////////////////////////////////////

@each $property in map-get($properties, display) {

  // Display base
  %u-display-#{ $property } { display: #{ $property } }

  // Display breakpoints
  @each $screen in map-keys($breakpoints) {
    @include above('#{ $screen }') {
      %u-display-#{ $property }__#{ $screen } {
        display: #{ $property }
      }
    }
  }
}

%u-flex-row,
%u-flex-inline-row {
  flex-flow: row wrap;
}

%u-flex-row { @extend %u-display-flex; }
%u-flex-inline-row { @extend %u-display-inline-flex; }

%u-flex-row-start {
  align-items: flex-start;

  @extend %u-flex-row;
}

%u-flex-row-center,
%u-flex-inline-row-center {
  align-items: center;
}

%u-flex-row-center {  @extend %u-flex-row; }
%u-flex-inline-row-center { @extend %u-flex-inline-row; }

////////////////////////////////////////////////////////////
//  =Width/ Height
////////////////////////////////////////////////////////////

%u-width-full     { width: 100%; }
%u-width-full-vw  { width: 100vw; }
%u-height-full    { height: 100%; }
%u-height-full-vh { height: 100vh; }
%u-max-width-full { max-width: 100%; }

////////////////////////////////////////////////////////////
//  =Containers/ Rows
////////////////////////////////////////////////////////////

// Margins
%u-margin-0          { margin: 0 }
%u-margin-top-xsmall { margin-top: .5rem; }
%u-margin-top-small  { margin-top: 1rem; }
%u-margin-top-medium { margin-top: 2rem; }

%u-margin-center-x {
  margin-left: auto;
  margin-right: auto;
}

@each $screen in map-keys($breakpoints) {
  @include above('#{ $screen }') {
    %u-margin-center-x__#{ $screen } {
      margin-left: auto;
      margin-right: auto;
    }
  }
}

// ** Row/ content **
// ****************************

// Padding
%u-padding-xsmall { padding: .5rem; }
%u-padding-small  { padding: 1rem; }
%u-padding-medium { padding: 2rem; }
%u-padding-large  { padding: 3rem; }

%u-padding-y-xsmall { padding: .5rem 0; }
%u-padding-y-small  { padding: 1rem 0; }
%u-padding-y-medium { padding: 2rem 0; }
%u-padding-y-large  { padding: 3rem 0; }

%u-padding-x-xsmall { padding: 0 .5rem; }
%u-padding-x-small  { padding: 0 1rem; }
%u-padding-x-medium { padding: 0 2rem; }
%u-padding-x-large  { padding: 0 3rem; }

%u-padding-top-small  { padding-top: 1rem; }
%u-padding-top-medium { padding-top: 2rem; }

%u-container-wide,
%u-content-main,
%u-content-aside {
  @extend %u-max-width-full;
}

// Containers
%u-container-narrow,
%u-container-wide {
  @extend
    %u-margin-center-x,
    %u-width-full;
}

%u-container-narrow {
  max-width: 35rem;
}

%u-container-wide {
  max-width: 60rem;
}

%u-content-main,
%u-content-aside {
  width: 35rem;
}

%u-content-aside {
  @include above('large') {
    width: 22rem;
  }
}

////////////////////////////////////////////////////////////
//  Colors/ 'Decoration'
////////////////////////////////////////////////////////////

// ** BGC/ colors **
// ****************************

// Merge primary and secondary color maps into $colors
// See theme.scss

@each $name, $color in $colors {

  // Colors
  %u-color-#{ str-replace($name, '_', '-') } {
    color: map-get($colors, $name);
  }

  // Background colors
  %u-bgc-#{ str-replace($name, '_', '-') } {
    background-color: map-get($colors, $name);
  }

  // Accents
  @each $side in map-get($properties, origins) {
    %u-accent-small-#{ str-replace($name, '_', '-') }-#{ $side } {
      border-#{ $side }: 2px solid map-get($colors, $name);
    }
    %u-accent-medium-#{ str-replace($name, '_', '-') }-#{ $side } {
      border-#{ $side }: 4px solid map-get($colors, $name);
    }
    %u-accent-large-#{ str-replace($name, '_', '-') }-#{ $side } {
      border-#{ $side }: 6px solid map-get($colors, $name);
    }
  }
}

// ** Overlay **
// ****************************

%u-overlay,
%u-overlay-light,
%u-overlay-medium,
%u-overlay-dark {
  &::after {
    @extend
      %u-height-full,
      %u-pseudo-element-base,
      %u-width-full;
  }
}

%u-overlay,
%u-overlay-medium {
  &::after {
    background-color: rgba(#000, .3333);
  }
}

%u-overlay-dark {
  &::after {
    background-color: rgba(#000, .5);
  }
}


// ** Box sadow **
// ****************************

@each $name, $color in $primary_colors {
  %u-box-shadow-#{ str-replace($name, '_', '-') } {
    box-shadow: 0 0 10px 3px darken($color, 12.5%);
  }
}

@each $name, $shadow in $box_shadow {
  %u-shadow-#{ str-replace($name, '_', '-') } {
    box-shadow: $shadow;
  }
}

// ** Border radius **
// ****************************

%u-border-radius-small { border-radius: 2px; }

// ** Opacity **
// ****************************

%u-opacity-0 { opacity: 0; }
%u-opacity-1 { opacity: 1; }

// Opacity breakpoints loop
@each $screen in map-keys($breakpoints) {
  @include above('#{ $screen }') {
    @each $opacity in map-get($properties, opacity) {
      %u-opacity-#{ $opacity }__#{ $screen } {
        opacity: #{ $opacity };
      }
    }
  }
}

////////////////////////////////////////////////////////////
//  =Animations/ Transitions
////////////////////////////////////////////////////////////

%u-transition-base-all       { transition: all $transition_base; }
%u-transition-base-transform { transition: transform $transition_base; }

@each $screen in map-keys($breakpoints) {
  @include above('#{ $screen }') {
    %u-transition-base-all__#{ $screen }       { transition: all $transition_base; }
    %u-transition-base-transform__#{ $screen } { transition: transform $transition_base; }
  }
}

%u-animate-fadein {
  animation: FadeIn $transition_base;
}

%u-animate-slide-up-in-center {
  animation: SlideUpInCenter $transition_base;
}


////////////////////////////////////////////////////////////
//  =Type
////////////////////////////////////////////////////////////

%u-vertical-rhythm-xsmall  { margin-top: .5em; }
%u-vertical-rhythm-small   { margin-top: 1em; }
%u-vertical-rhythm-medium  { margin-top: 1.5em; }

// Font families
@each $font_name, $font in map-get($fonts, main) {
  @each $weight_name, $weight in $font {
    @each $style_name, $style in $weight {
      %u-font-#{ to-lower-case($font_name) }-#{ $weight_name }-#{ $style_name } {
        font-family: '#{ $font_name } #{ $weight_name } #{ $style_name }';
      }
    }
  }
}

// Font sizes
@each $size_name, $size in $font_sizes {
  %u-font-size-#{ $size_name } { font-size: #{ $size }; }
  @each $screen in map-keys($breakpoints) {
    @include above('#{ $screen }') {
      %u-font-size-#{ $size_name }__#{ $screen } {
        font-size: #{ $size };
      }
    }
  }
}

%u-uppercase { text-transform: uppercase; }
%u-lowercase { text-transform: lowercase; }

%u-text-align-center { text-align: center; }

// *********************************************************
// *********************************************************
//
//  Live utilities
//
// *********************************************************
// *********************************************************

////////////////////////////////////////////////////////////
//  Colors
////////////////////////////////////////////////////////////

.u-col-white { color: $brand_white !important; }

.u-bgc-white      { @extend %u-bgc-brand-white; }
.u-bgc-blue { background-color: $brand_blue !important; }

////////////////////////////////////////////////////////////
//  Type
////////////////////////////////////////////////////////////

.u-align-center {
  @extend %u-text-align-center;
}

////////////////////////////////////////////////////////////
//  Box model
////////////////////////////////////////////////////////////

.u-mtop-xs { @extend %u-margin-top-xsmall; }
.u-mtop-sm { @extend %u-margin-top-small; }
.u-mtop-md { @extend %u-margin-top-medium; }

.u-ptop-sm { padding-top: 1rem; }
.u-ptop-md { padding-top: 2rem; }

.u-vr-xs { @extend %u-vertical-rhythm-small; }
.u-vr-sm { @extend %u-vertical-rhythm-small; }

.u-accb-grey {
  border-bottom: 2px solid $brand_white_2;
}

.u-bold {
  font-weight: bold;
}
